


create as many pipes as heredocs
make one child process:
process all heredocs inside it:
each 
close read end
write to its corrosponding pipe
close write end

back to parent normal
each heredoc in the array close write end
set open read end to 1


back to parent in case of ctrl+c
close all pipes read and write ends
clean up heredocs




the signal of the heredoc:

static void    handle_sigint_hdoc(int sig)
{
    (void)sig;
    write(1, "\n", 1);
    char *args = {NULL};
    execve("/bin/false", &args, NULL);
}

execve will terminte the child without memory leaks
and the command "/bin/false"
doesnt do anything but returns status of 1 instead of 0

if the status is 1
this is a way to know in the parent process to not print or execute the commands
cus heredoc was terminted with ctrl+c
